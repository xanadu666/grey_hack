// sorting algorithm for xDraw image coordinates
// with example
// by xanadu 2024

// when an image map is used in xDraw the key:value pairs must be in a specific order.
// this algorithm will automatically sort the key:value pairs into desired order.

color = {}
	color.white = "<color=#FFFFFF>"
	color.grey = "<color=#A5A5A5>"
	color.blue = "<color=#003AFF>"
	color.cyan = "<color=#00FFE7>"
	color.purple = "<color=#D700FF>"
	color.red = "<color=#AA0000>"
	color.yellow = "<color=#FBFF00>"
	color.orange = "<color=#FF8701>"
	color.brown = "<color=#964B00>"
	color.green = "<color=#00ED03>"
	color.peach = "<color=#FFE5B4>"
	color.dandilion = "<color=#F0E130>"
	color.silver = "<color=#C0C0C0>"
	color.gold = "<color=#FFD700>"
	color.hotpink = "<color=#FF69B4>"
	color.midnightblue = "<color=#191970>"
	color.rootbeer = "<color=#724A35>"
	color.mtdew = "<color=#EAEDB9>"
	color.blood = "<color=#780606>"
	color.poop = "<color=#593001>"
	color.champagne = "<color=#F7E7CE>"
	color.alibaster = "<color=#EEEAE0>"
	color.money = "<color=#084f09>"
	color.death = "<color=#451208>"
	color.sky = "<color=#87CEEB>"
	color.tangerine = "<color=#F28500>"
	// uncomment and add new colors here
	//color. = "<color=>"
	//color. = "<color=>"
	//color. = "<color=>"
	color.cap = "</color>"
	

spot1 = {}
	
	spot1[1] = [[33, 8], color.white, "%"]
	spot1[2] = [[21, -6], color.blue, "%"]
	spot1[3] = [[22, 2], color.white, "%"]
	spot1[4] = [[1000, 2], color.red, "%"]
	spot1[5] = [[20, 3], color.white, "%"]
	spot1[6] = [[-5, 3], color.white, "%"]
	
Sort_Image_Coordinates = function(data)
	
	Sort_By_y = function(data)
		j = 1
		i = 1
		value_holder = {1:""}
		while true
			if data[i][0][1] > data[j][0][1] then
				value_holder[1] = data[i]
				data[i] = data[j]
				data[j] = value_holder[1]
				i = 1
				j = 1
				x = 1
				continue
			end if
			j = j + 1
			if j > data.len then
				i = i + 1
				j = i 
			end if
			if i > data.len then return data
		end while
	end function
	
	Sort_By_x = function(data)
		j = 1
		i = 1
		value_holder = {1:""}
		while true
			if data[i][0][1] == data[j][0][1] and data[i][0][0] > data[j][0][0] then
				value_holder[1] = data[i]
				data[i] = data[j]
				data[j] = value_holder[1]
				i = 1
				j = 1
				continue
			end if
			j = j + 1
			if j > data.len then
				i = i + 1
				j = i 
			end if
			if i > data.len then return data
		end while
	end function
	
	sorted_by_y = Sort_By_y(data)
	sorted_data = Sort_By_x(sorted_by_y)
	return sorted_data
end function

while true
	print spot1.values + "\n\n"
	spot1 = Sort_Image_Coordinates(spot1)
	exit spot1.values
end while
